{
    // SMART Visual Chain-of-Thought Project ======================================= //
    "version": "0.2.0",
    "configurations": [
        {
            "name": "train.py",
            "type": "debugpy",
            "request": "launch",
            "program": "train.py",
            "console": "integratedTerminal",
            "args": [ 
                "--task", "GPT_augmentation_train",
                "--run_name", "debugging_console",
                "--output_dir", "./checkpoints/dump/",
                "--num_train_epochs", "3",
                "--per_device_train_batch_size", "2",
                "--per_device_eval_batch_size", "2",
                "--train_tot", "1000",
                "--eval_tot", "3",
                "--gradient_accumulation_steps", "2",
                "--report_to", "wandb",
                "--logging_steps", "40",
                "--evaluation_strategy", "steps",
                "--eval_steps", "40",
                "--save_strategy", "epoch",
                "--save_steps", "1500",
                "--save_total_limit", "30",
                "--gpt_data_include_level", "2",
                "--val_puzzle_list", "94,95,96,97,98,99,101,61,62,65,66,67,69,70,71,72,73,74,75,76,77",
                "--test_puzzle_list", "94,95,96,97,98,99,101,61,62,65,66,67,69,70,71,72,73,74,75,76,77",
                // "--USE_DPR", "True",
                "--data_type", "METEOR"
                ]
        },
        
        {
            "name": "eval.py",
            "type": "debugpy", 
            "request": "launch",
            "program": "eval.py",
            "console": "integratedTerminal",
            "args": [ 
                "--output_dir", "./checkpoints/dump/",
                "--per_device_train_batch_size", "2",
                "--per_device_eval_batch_size", "2",
                ]
        },

        {
            "name": "generation.py",
            "type": "debugpy",
            "request": "launch",
            "program": "generation.py",
            "console": "integratedTerminal",
            "args": [ 
                "--num_workers", "8",
                "--batch_size", "1",
                "--save_root", "./V_COT_output/ablation_study/",
                "--output_name", "dump.json",
                "--load_ckpt_path", "checkpoints/GPT_aug_level2_DPR_20tot/checkpoint-297",
                "--VLM_type", "Idefics2",
                "--test_puzzle_list", "94,95,96,97,98,99,101,61,62,65,66,67,69,70,71,72,73,74,75,76,77",
                "--eval_tot", "3",
                "--gpu_num", "3",
                "--USE_DPR", "True",
                ]
        },

        {
            "name": "V_COT.py",
            "type": "debugpy",
            "request": "launch",
            "program": "V_COT.py",
            "console": "integratedTerminal",
            "args": [ 
                "--num_workers", "8",
                "--batch_size", "1",
                "--save_root", "./V_COT_output/ablation_study/",
                "--output_name", "dump.json",
                "--load_ckpt_path", "checkpoints/level2_regularized/checkpoint-22250",
                "--VLM_type", "Idefics2",
                "--eval_tot", "3",
                "--gpu_num", "2",
                "--USE_DPR", "False",
                ]
        },

        {
            "name": "gpt_paraphrasing.py",
            "type": "debugpy",
            "request": "launch",
            "program": "GPT_paraphrasing.py",
            "console": "integratedTerminal",
            "args": [ 
                "--num_workers", "8",
                "--batch_size", "1",
                "--data_root", "/data/SMART101-release-v1/SMART101-Data/",
                "--save_root", "./V_COT_output/",
                "--input_name", "./V_COT_output/GT/GT_rationale_dataset_develop.json",
                "--output_name", "gpt_paraphrasing_result.json",
                "--VLM_type", "Idefics2",
                "--gpu_num", "3",
                ]
        },

        {
            "name": "gpt_augmentation_generation.py",
            "type": "debugpy",
            "request": "launch",
            "program": "GPT_augmentation.py",
            "console": "integratedTerminal",
            "args": [ 
                "--num_workers", "8",
                "--batch_size", "1",
                "--save_root", "./V_COT_output/",
                "--output_name", "gpt_augmentation_result",
                "--train_tot", "1000",
                "--phase", "1_4"
                ]
        },

        {
            "name": "Current File",
            "type": "debugpy",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal"
        }
    ]
}